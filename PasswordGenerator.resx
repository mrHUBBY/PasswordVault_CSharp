<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABL
        S0t8fHx0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0
        dHR0dHR0dHR0dHR0dHR1dHR0dHR5eXlwcHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAACXl5fJysqUlJOFhYSGhYWGhYWGhYWGhYSGhYSGhYSGhYSGhYSGhYSG
        hYSGhYSGhYSGhISGhYSGhYWGhYWGhYWGhYWGhYWGhYWGhYWGhYSHhYWHhYWNjY26u7vBwcEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCQkKzs7MmLC0JFhoLHB8LHB8M
        HB8LHCALGx4LGh4LGh4LGh4LGh4LGh0LGR0LGRwLGR0LGR0LGR0LGRwLGBsLGBsLGBsLGBsLGBsLGRsK
        FhkKFRcJEhQIDA0oKCioqamTlJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABta2s/S04LNT4jXWgmYm8mYm8mYm8nY3AnYm8nY3AmY28nY3AoZHAnZHAnY3AnY28nY28nYm8n
        Y28nYm4mYm4mYW4mYm4mYW0lYW0lYWwjXmoiW2cfVF8WQEgEERVQUFDGxsYAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHR0YjQkgtcX8/hpNMipNUjpZWkJdXkplZk5pZlJta
        lJpblJpdlZxdlp1clpxclZtclZxclZtblJtZlJtZk5pXkplXkppUkplTkJlPj5hNjJZGiJM7gY4wdoMR
        PEU4OzvJycgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9PTwqUltA
        jppmoqd/rq6KuLaMuriNu7iOuriOubaNuLWNt7WOuLaPubaRubeQubeQuLaRuriQuriQurePubePubeO
        ubeMuriLuLeJubiEuLh8srNlpKlHlKEfWmY0PT/DwsIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAA+PT0wW2VSoq2Dvr6d0s+j29ik3Nii2dai1dKh0c6iz82hzMmgyseizMmj
        zcul0Myn0s6n0c6o0s+p09Co0s+n09Cm1dGm1tOm2dam3dmj3dme2NaIxcVdrbYoa3g0P0HCwcAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+PT0zYmxarrmOzs+n5OCs7Omq
        6+eq5eKp39yo2teq19Sp1dOm0M2cwr+UuLWStbKTtLGVuLaawL2kzMmp1NGo1dKo19Oo2teq4d2r5+Os
        6+ip6OWW1tZrvMUvd4Q1QkTBv78AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA+PT02ZnBdtsOS09So5eKq6uel4+Cf2daaz8yXxcOVv72Irap3lpNnhINZcXBYcnBZcXBZcG9g
        fHpwjYuBoqCQt7SWwb+cyseg1dKj39yn5uOn5+OY2dhvxc4zf402REfAvr4AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+PT02aXJfu8iS09Sn4t+n5eKh29iYzMmRv72Isq93
        mJZfeXdUamlLXl1DVFM5REQ4RERBT05KXFtRZ2Vac3FuioiCp6WNt7aUxMKc1dGi4N2j5OGZ2dhzyNI2
        hpU2REfBv74AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9PDw4bHZj
        v8yU1NWl3tuk3dqa0M6PvbqDqqhriohUbGpTZ2ZVZmROWlhPV1dQV1ZRV1ZQVlVOWFhUY2FTZ2ZPZGNg
        end4nZuHs7GTx8Wd2dah4Nya2dl3zdY6jZw2RUnAvr0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAA9PDw4bXZjv82T09Sk2teg1tOUxMKFrqtqiIZNYWBdbm19jo2JlJNqb28S
        ExMODg8ODw8NDg5YXFyKk5OBkJBkdnVJXVxddnR7oqCMvLuZ0c+h3dmb2Nd6ztg8j504RkrAvr0AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+PT06bXdjv8yV1NSl2dah09GT
        wL1/op9Yb21TZmWNnZy1vr3FyMioqakWFxcAAAAAAAAGBgaSlJPFx8e7w8KWpqRfb25KXVxvkI6ItLOW
        y8mg2tac1tV7ztc9j504R0q/vb4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA/Pj46bnhlv8yV09Sk19SdzsyNt7V8m5hRZGJzg4GzvbzX2trm5+fHx8c/QEAAAAAAAAAjJSW6
        vLzj4+Pe39+7xMODkZBNXl5uiIaCq6qTxsOf1dKc1NN7zNQ/kJ45R0q/vb0AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAPz87cHlqw8+b2Nir3tuk1dKTvLqHoZ9bbWuNmZjK
        z8/p6eny8vLZ2dhkZ2gCBwgBBghNUFHGyMjw8PDs7e3S1NSjsK9WY2J9kpCFqaeSwb6d0c6d09F+zdVB
        kqA5R0rAvr4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCQEA8cHpr
        w9Cc2dms39um1dKVvruPo6JbammmtbTW2trw8PD29vbW1taHiYokKCkgJCWEhobLy8v09PTy8vLe4OC0
        vbxeaWmGmJeHqqiQvbuhz8yf09CAztRCk6E7SEvAvr4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABDQUE9cHlrws2b2Ner3Nik1NCTvLqSp6Zda2qturnd39/z8/Pv7+/HyMia
        m5tDRERHSEeam5u/wMDo6Oj19fXk5eW6wsJga2uKm5uNrauVwL2n1dKk2NWE0ddDk6A8SkzAvr4AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDQkI8bndlvsqV0dCo19Sl09CS
        vbuetrVndnWYo6Lc4N/w8PDc3Nysra1tbW1kZWVkZWViY2OfoKDQ0NDv8PDh4+Oyu7pbaGePoqCJqqiV
        v7yk0M2g09GAztRDk6A9SUvCwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABEREQ/cHlnwMya1NSu3dqv3dqgy8ipxcN+jo57iYjN1NTo6enV1dWZmpqDhISKi4uKi4uJioqU
        lZW/v7/p6enW29uPmZhhb26Yq6p/op+TvLqhzMmd0M19y9JAj5w7SUzDwcEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRUU+b3lowMya1dSt3Niv3dum0s+dwb6esrFgcXCp
        tbTa39/U1NSXmJmDhYWusLGvsLCLjY2Ji4vHyMjc39+5wsFjcXCCkpGRqqiJraqgycer2dal2deB0dhC
        kJ09Sk3EwsIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIRkY+cHlo
        wc2b1tWw39uy392r2NWaw8Giv72ClZR0hIPM09LY3Ny7vb1+gIBoaWpqa2tzdHSsr6/S1dXV29uGkI9m
        dXSXqql/npyPtrSkzsus29ik2dZ+0Nc9jpw8Sk3Gw8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABIR0c8cHlkvsqV0tKr29ew3tus2tekzsuXvrymvr19j46Bj47R1NTl5eXS
        09K2t7e1tbXOz8/h4eHd39+RmploeXiTpaN/nJqCpaOTvbuk0M2q2tef1dN5zNQ7jZs/S07HxMQAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKSUk8b3lgu8mU0tKq29ix4d60
        4uCy3tup1dKlzMmzzsyXrKt1iIeVn565v7+9v7+8vr67wcCeqKdyg4KBk5KnuriVsrCTt7Wiy8it2de2
        5uS26eal3tx7z9g6jJo+TE/HxsYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABMS0s9cXtevMuS09Wr3tux5OGx4d6w3tuu2tem0s+fyceqzMqvysiiubiWqKeXqaiWqKeSpaSb
        r66pwL+nxMKWu7mWwL2gysiq19Sv4N2w5eKr5OCa2NdyydQ2h5Y9S0/Jx8YAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPTk49cHpYvMuJ1dio4d6z6OW16OS05uO04+Cz4t+x
        4N2t2tes2NWz3Nq+4d/F5OLD4+G+4N+029mo0tCizsym09Gr2das3tqx5OG06eaw6eap5uKV2Nlqytc0
        hZQ+TVDNy8oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0MzMzXmdP
        tMR52uOa4+So6eeo5uSn5OKn4t+p4t6o4N2l3tul3Nqk29mh2Nej2tek2tei2tek3dqo4d6r4+Gp4uCo
        4uCo5eOn6Oao6eip6umf5ueG3eJiy9ordYJYY2W5uLcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAgHh1CU1Y2fYpcvcp71t2J3eCL3d+J2dyI2NqL292N3N6Q3uCO3d+M2t2N
        292N2d2M2t2O296O296N3N+L2t2J2dyI2tyF19qE19qH296F299+2N5nytVAmKgoU1qurq9ZWVgAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgHh1EUVNBYmhOc3dpkJJ1
        m52IrrCNsrR5n6FvlplagIJNcnRdgoRQdXdQdHVQdHdPdXdPc3ZQdnhUeXtpj5F1mp2Hra+MsbN4nqBt
        lZdVe34/YmhRanB/gIFYV1cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABgXFx9eXmblpbY1NPk39+sqKeAfX1dWlmmoqJQTEwAAAAAAAAAAAAAAAAA
        AAAjHh5hXl19enqalpbX09Pk39+tqKiCfn5eW1uopKRcWFcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKSkppampkZGTAwcHP0M+LjIw1
        NzeRkpOOjo4AAAAAAAAAAAAAAAAAAAAAAAAAAABKSkpsbW1jY2O/wMDQ0NCOjo43OTiQkJCNjo4AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABFRUV+fn5tbW3Nzs7b3NuWl5c+QD+qrKx9fX0AAAAAAAAAAAAAAAAAAAAAAAAAAABGRkaCgoJs
        bGzMzMzc3d2YmZlBQ0KnqKh8fHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRkaAgYFxcnLW19fk5eWbnJxBQkKrrKyAgIAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABHR0eDg4NvcHDU1dXl5uafoKBERUWmp6d+f38AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRkaDhIR0
        dXXd3t7s7OyhoqJERESur69/f38AAAAAAAAAAAAAAAAAAAAAAAAAAABGRkaGhoZzdHTb3Nzt7e2kpaVF
        RkWpq6qAf38AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABISEiHh4d2d3fi4+Py8vKkpaVDREOpq6p/gIAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABISEiKiotzdXXh4uLz8/OnqKhFRkavsbCEhIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNTU2Pj49vcXHe39/09PSnqKhA
        QkKJi4q9vb0CAgIAAAAAAAAAAAAAAAAAAAAAAACIiIiGh4dzdXXj4+Pz9PSgoqJGR0e0tbVpaWkAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAyMjKioqJhYmLMzc329va5urpOT09LTEvLzMyXl5cEBAQAAAAAAAAAAAAAAABGRka+v79VVlWK
        i4vp6urr7OyHiYlOT0/Jyso6OjoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxsbFmZmapqqr09PTY2dl1dnY0NTVnaGjY2dm0
        tLRbW1s/Pz9IR0eGh4fb29tvcHBQUVG1trbz9PTV1tZoaWlyc3PExMQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRkpKQ
        kZGCg4Ph4uLv8fG0tbVbXF0zNDRaW1uqrKzT09PX2NjR0tK2t7djZGRFR0aOj4/g4eHy8/OrrKxeX1+w
        sbB+fn4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABISEjDxMSEhYW3ubny8vLn6Oiqq6tgYWA6Ozs6OztOT09YWVlQUFBA
        QUFKS0uJiorV1tb19fXU1dWQkZF/f3/Ozs4cHBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgoKC1trawsbHT1NTz
        8/Pm5+e5u7qGhoZmZmZaW1tYWlpfYF90dHSkpKTY2dnz8/Pj4+PAwcGQkZHGxsZycnIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAoKCjKy8vAwcHU1dXe39/t7e3r6+vb3NzHyMi9vr68vb3Cw8PT1NTm5+fu7+/m5uba
        2tq2t7fAwcGwsLADAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCyztLTU1tbLzMzm5ubu7+/r7Ozu
        7u7v7+/v7+/v7+/s7Ozs7e3s7OzU1dW/wMDS1NSbnJwUFBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAZGRmjo6PU1NTIysrQ0dHn6Ojr7Ozw8PDx8fHt7e3s7OzZ2dnGx8fFxsa+v79cXFwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMS0usrKzR0tLLzMzS1NTS0tLS09PT1NTK
        y8vHyMi3uLhnZ2cZGRkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABAQEwMDBlZWV7e3ufn5+enp55eXlvb287OzsJCQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////8AAP/gAAAA/wAA/8AAAAB/AAD/gAAAAD8AAP+AAAAAPwAA/4AAAAA/
        AAD/gAAAAD8AAP+AAAAAPwAA/4AAAAA/AAD/gAAAAD8AAP+AAAAAPwAA/4AAAAA/AAD/gAAAAD8AAP+A
        AAAAPwAA/4AAAAA/AAD/gAAAAD8AAP+AAAAAPwAA/4AAAAA/AAD/gAAAAD8AAP+AAAAAPwAA/4AAAAA/
        AAD/gAAAAD8AAP+AAAAAPwAA/4AAAAA/AAD/gAAAAD8AAP+AAAAAPwAA/4AAAAA/AAD/gAAAAD8AAP/A
        AAAAfwAA//gB8AH/AAD/+AP4A/8AAP/4A/gD/wAA//gD+AP/AAD/+AP4A/8AAP/4A/gD/wAA//gB8AP/
        AAD/+ADgA/8AAP/8AAAH/wAA//wAAAf/AAD//AAAB/8AAP/+AAAP/wAA//4AAA//AAD//wAAH/8AAP//
        gAA//wAA///gAH//AAD///AB//8AAP///////wAA////////AAA=
</value>
  </data>
</root>